//
// gocontract/generate_test.go
// gocontract
//
// Created by steve on 2019-03-02.
// Copyright Â© 2019 Klassen Software Solutions. All rights reserved.
// Permission is hereby granted for use under the MIT License (https://opensource.org/licenses/MIT).
//

package gocontract

import (
	"io/ioutil"
	"regexp"
	"strings"
	"testing"
)

func matches(pattern, value string) bool {
	matched, _ := regexp.MatchString(pattern, value)
	return matched
}

func TestAutoGeneratedCode(t *testing.T) {
	// Version should match the pattern v9.9.9[-optional]
	if !matches(`v[0-9]+\.[0-9]+\.[0-9]+.*`, Version) {
		t.Errorf("Invalid version: %v", Version)
	}

	// License should match the contents of the LICENSE file
	licenseBytes, err := ioutil.ReadFile("LICENSE")
	if err != nil {
		t.Fatalf("Could not read the file LICENSE, err=%v", err)
	}

	lic := strings.TrimSpace(string(licenseBytes))
	if lic != License {
		t.Error("License does not match the LICENSE file")
		t.Logf("License=[%v]\n", License)
		t.Logf("LICENSE=[%v]\n", lic)
	}
}
